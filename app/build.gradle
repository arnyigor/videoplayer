apply plugin: 'com.android.application'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: "com.google.android.libraries.mapsplatform.secrets-gradle-plugin"
apply from: "$rootProject.projectDir/dependencies.gradle"
apply from: "$rootProject.projectDir/commonconfig.gradle"
apply plugin: 'ru.ok.tracer'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlinx-serialization'


android {
}

dependencies {
    kotlinLib()
    core()
    workmanager()
    splashscreen()
    coordinator()
    coroutines()
    lifecycle()
    activity()
    fragment()
    recycler()
    cardview()
    supportLegacy()
    dagger()
    material()
    glide()
    navigation()
    jodaTime()
    appcompat()
    materialDialog()
    preference()
    constraintlayout()
    exoplayer()
    youtubePlayerView()
    tests()
    androidTests()
    timber()
    commonsCodec()
    ktor()
    jsoup()
    roomDB()
    tracerLib()
    firebase()
    firebaseDatabase()
    kotlinxSerialization()
    bouncycastle()
    ffmpeg()
}

tracer {
    defaultConfig {
        Properties properties = new Properties()
        File propertiesFile = new File('secrets.properties')
        propertiesFile.withInputStream {
            properties.load(it)
        }
        // См. в разделе "Настройки"
        pluginToken = properties['TRACER_PLUGIN_TOKEN']
        appToken = properties['TRACER_APP_TOKEN']

        // Включает загрузку маппингов для билда. По умолчанию включена
        uploadMapping = true
    }

    // Также можно задавать конфигурацию для каждого flavor, buildType, buildVariant.
    // Конфигурации наследуют defaultConfig.
    debug {
        // Параметры...
    }
    demoDebug {
        // Параметры...
    }
}