/**
 * Нужно в build.gradle модуля прописать:
 * apply from: "$dep_aliases"
 */

def Alias(Closure closure) {
    closure.delegate = dependencies
    closure()
}

ext {
    versions = [
            minSdkVersion            : 21,
            compileSdkVersion        : 30,
            targetSdkVersion         : 30,
            buildToolsVersion        : "30.0.2"
    ]

    kotlin = { stdlib_version = '1.4.21' -> Alias {
        implementation "org.jetbrains.kotlin:kotlin-stdlib:$stdlib_version"
        implementation 'androidx.core:core-ktx:1.3.2'
    }}

    fragment = { version = '1.2.5' -> Alias {
        implementation "androidx.fragment:fragment-ktx:$version"
    }}

    moxy = { moxyVersion = '2.2.0' -> Alias {
        implementation "com.github.moxy-community:moxy:$moxyVersion"
        implementation "com.github.moxy-community:moxy-androidx:$moxyVersion"
        implementation "com.github.moxy-community:moxy-ktx:$moxyVersion"
        kapt "com.github.moxy-community:moxy-compiler:$moxyVersion"
    }}

    lifecycle = { version = '2.2.0' -> Alias {
        implementation "androidx.lifecycle:lifecycle-extensions:$version"
        implementation "androidx.lifecycle:lifecycle-livedata-ktx:$version"
        implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$version"
    }}

    navigation = { version = '2.3.2' -> Alias {
        implementation "androidx.navigation:navigation-fragment-ktx:$version"
        implementation "androidx.navigation:navigation-ui-ktx:$version"
    }}

    preference = { version = '1.1.1' -> Alias {
        implementation "androidx.preference:preference:$version"
    }}

    firebaseBom = { version = '26.0.0' -> Alias {
        implementation "com.google.firebase:firebase-bom:$version"
    }}

    exomedia = { version = '4.3.0' -> Alias {
        implementation "com.devbrackets.android:exomedia:$version"
    }}

    exoplayer = { version = '2.12.2' -> Alias {
        implementation "com.google.android.exoplayer:exoplayer:$version"
        implementation "com.google.android.exoplayer:exoplayer-core:$version"
        implementation "com.google.android.exoplayer:exoplayer-dash:$version"
        implementation "com.google.android.exoplayer:extension-mediasession:2.8.4"
        implementation "com.google.android.exoplayer:exoplayer-ui:$version"
        implementation "com.google.android.exoplayer:exoplayer-hls:$version"
    }}

    cicerone = { version = '6.6' -> Alias {
        implementation "com.github.terrakok:cicerone:$version"
    }}

    jodaTime = { version = '2.10.8' -> Alias {
        implementation "joda-time:joda-time:$version"
    }}

    firebaseDatabase = { version = '19.2.1' -> Alias {
        implementation "com.google.firebase:firebase-database-ktx:$version"
    }}

    viewbindingpropertydelegate = { version = '1.3.0' -> Alias {
        implementation "com.kirich1409.viewbindingpropertydelegate:vbpd-noreflection:$version"
    }}

    tests = { junit = '4.13.1' -> Alias {
        testImplementation "junit:junit:$version"
        androidTestImplementation "androidx.test.ext:junit:1.1.2"
        androidTestImplementation "androidx.test.espresso:espresso-core:3.3.0"
    }}

    coroutines = { version = '1.4.2' -> Alias {
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version"
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version"
    }}

    rxjava2 = { version = '2.2.15' -> Alias {
        implementation "io.reactivex.rxjava2:rxjava:$version"
        implementation "io.reactivex.rxjava2:rxandroid:2.1.1"
        implementation "io.reactivex.rxjava2:rxkotlin:2.4.0"
    }}

    retrofit = { version = '2.6.2' -> Alias {
        implementation("com.squareup.retrofit2:retrofit:$version") {
            exclude module: 'okhttp'
        }
        implementation "com.squareup.retrofit2:converter-gson:$version"
        implementation "com.squareup.retrofit2:converter-scalars:$version"
    }}

    gson = { version = '2.8.5' -> Alias {
        implementation "com.google.code.gson:gson:$version"
    }}

    jsoup = { version = '1.13.1' -> Alias {
        implementation "org.jsoup:jsoup:$version"
    }}


    retrofitHtmlConverter = { version = '0.0.2' -> Alias {
        implementation "com.github.slashrootv200:retrofit-html-converter:$version"
    }}

    okhttp = { version = '4.9.0' -> Alias {
        implementation "com.squareup.okhttp3:okhttp:$version"
        implementation "com.squareup.okhttp3:logging-interceptor:$version"
    }}

    chuck = { version = '1.1.0' -> Alias {
        implementation "com.readystatesoftware.chuck:library:$version"
    }}

    dagger = { version = '2.29.1' -> Alias {
        implementation "com.google.dagger:dagger:$version"
        implementation "com.google.dagger:dagger-android:$version"
        implementation "com.google.dagger:dagger-android-support:$version"
        kapt "com.google.dagger:dagger-compiler:$version"
        kapt "com.google.dagger:dagger-android-processor:$version"
    }}

    glide = { version = '4.11.0' -> Alias {
        implementation "com.github.bumptech.glide:glide:$version"
        kapt "com.github.bumptech.glide:compiler:$version"
        implementation("com.github.bumptech.glide:okhttp3-integration:$version") {
            exclude group: 'glide-parent'
        }
    }}

    appcompat = { version = '1.2.0' -> Alias {
        implementation "androidx.appcompat:appcompat:$version"
    }}

    recycler = { version = '1.1.0' -> Alias {
        implementation "androidx.recyclerview:recyclerview:$version"
    }}

    constraintlayout = { version = '2.0.2' -> Alias {
        implementation "androidx.constraintlayout:constraintlayout:$version"
    }}

    swiperefresh = { version = '1.1.0' -> Alias {
        implementation "androidx.swiperefreshlayout:swiperefreshlayout:$version"
    }}

    viewpager2 = { version = '1.0.0' -> Alias {
        implementation "androidx.viewpager2:viewpager2:$version"
    }}

    exifinterface = { version = '1.1.0' -> Alias {
        implementation "androidx.exifinterface:exifinterface:$version"
    }}

    transition = { version = '1.3.1' -> Alias {
        implementation "androidx.transition:transition:$version"
    }}

    cardview = { version = '1.0.0' -> Alias {
        implementation "androidx.cardview:cardview:$version"
    }}

    material = { version = '1.2.1' -> Alias {
        implementation "com.google.android.material:material:$version"
    }}

    groupie = { version = '2.8.1' -> Alias {
        implementation "com.xwray:groupie:$version"
        implementation "com.xwray:groupie-kotlin-android-extensions:$version"
        implementation "com.xwray:groupie-viewbinding:$version"
    }}

    leakcanary = { version = '2.4' -> Alias {
        debugImplementation "com.squareup.leakcanary:leakcanary-android:$version"
        implementation "com.squareup.leakcanary:leakcanary-object-watcher-android:$version"
    }}

    java_test = { -> Alias {
        testImplementation 'org.junit.jupiter:junit-jupiter:5.5.2'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
        testCompileOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
        testImplementation 'org.hamcrest:hamcrest:2.1'
        testImplementation 'com.google.guava:guava:28.1-android'
        testImplementation 'org.mockito:mockito-core:3.1.0'
        testImplementation 'org.mockito:mockito-junit-jupiter:3.1.0'
        testImplementation 'org.mockito:mockito-inline:3.1.0'
        testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    }}

    android_test = { -> Alias {
        androidTestImplementation 'org.mockito:mockito-android:3.1.0'
        androidTestImplementation 'androidx.core:core-ktx:1.2.0'
        androidTestImplementation 'com.kaspersky.android-components:kaspresso:1.0.1'
        androidTestImplementation 'androidx.test.ext:junit:1.1.1'
        androidTestImplementation 'androidx.test:runner:1.2.0'
        androidTestImplementation 'org.junit.vintage:junit-vintage-engine:5.5.2'
    }}
}